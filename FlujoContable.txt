--Pseudocodigo para la aplicacion de un asiento contable en un lenguaje procedural de base de datos

funcion aplicar_asiento()
{
Entrada
-------
*Id Documento		Documento que esta asociado al asiento contable que se aplica

Begin
1. Se consulta del documento dado como parametro el Concepto y el Movimiento - Id_Concepto, Id_Movimiento
2. Se busca el Asiento Contable con Id_Documento, Id_Concepto, Id_Movimiento - Id_Asiento
3. Con base en el Asiento se obtienen la cuenta contable de cargo y abono - Id_CuentaContableCargo, Id_CuentaContableAbono
4. Del documento origen, tomando como base la informacion de Id_ClaveFolio, extrae Id_Sucursal
-------------Se crea documento de contabilidad-------
5. crear_documento(Id_Sucursal, Flujo_Contable, Id_Usuario que llama a la funcion, Id_Documento origen) - Id_Documento de contablidad
-------------Inicio Validaciones---------------------
6. Con base en la cuenta de Cargo y Abono se obtiene el libro contable para la sucursal - Id_LibroSucursal
7. Se consulta el estatus del libro en cuestion usando el registro mas reciente de la tabla, si esta Cerrado se genera un error mencionando que el asiento no se pudo aplicar ya que el libro contable esta cerrado y no se aplican los movimientos previos hechos en la BD. Si el estatus es abierto se continua.
8. Con base en Id_Libro Sucursal, se consulta Id_LibroContable. Si el anno asociado al Id_Libro contable es diferente del anno actual, se genera un error mencionando que el asiento no se pudo aplicar ya que el anno de aplicacion del asiento no corresponde al anno del libro contable
------------Fin Validaciones-------------------------
------------Actualizacion de registros contables-----
9. Se crea un registro en Movimiento Contable especificando el Id_LibroSucursal, Id_AsientoContable y Id_Documento
10. Con la informacion de Id_CuentaContableCargo se obtiene el Tipo de cuenta a la que pertenece (Activo, Pasivo, Capital, Ingresos, Costos, Gastos)
11. En Libro_CuentaContable se actualiza el saldo de Id_CuentaContableCargo con respecto a la siguiente logica. Al Saldo del registro para Id_CuentaContableCargo se le sumara el monto asociado a Id_Documento si el Tipo de cuenta de Id_CuentaContableCargo es Activo, Costos, Gastos. Pero se restara el monto del documento del Saldo si el Tipo de cuenta es Pasivo, Capital, Ingresos
12. En Libro_CuentaContable se actualiza el saldo de Id_CuentaContableAbono con respecto a la siguiente logica. Al Saldo del registro para Id_CuentaContableAbono se le sumara el monto asociado a Id_Documento si el Tipo de cuenta de Id_CuentaContableAbono es Pasivo, Capital, Ingresos. Pero se restara el monto del documento del Saldo si el Tipo de cuenta es Activo, Costos, Gastos
----------------------------------------------------
13. Si se obtiene el Id del Movimiento contable generado por la transaccion, se considera que la accion es exitosa 
    cerrar_documento(Id del Documento de contabilidad)
End

Salida
------
Id Documento de contabilidad
}
/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*
funcion cerrar_documento(Id_Documento actual,Id_Documento origen)
{
Entrada
-------
*Id_Documento actual		Se refiere al documento que se desea cerrar
*Array de Id Documento hijo	Se refiere al documento del que se depende a fin de poder considerar el documento actual como cerrado. Este campo puede ser nulo

Begin
1. Si no se reciben documentos hijos como parametros. Se hace una busqueda en los registros de Documentos para revisar si Id_Documento actual se encuentra en algun registro en su campo Id_Documento origen. En caso de que asi sea se generara un mensaje de error en donde se manifieste que no es posible cerrar el documento ya que es origen de otro.
2. Si se reciben como parametros en la funcion uno o mas documentos hijos, primero se verifica que los estados de todos y cada uno sean cerrados y de ser asi se procede al siguiente paso, de caso contrario se genera el error del punto 1
3. Se cambia el estatus de Id_Documento actual a Cerrado
End

Salida
------
True or False
}
